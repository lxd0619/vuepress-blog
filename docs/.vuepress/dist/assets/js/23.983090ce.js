(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{369:function(s,t,e){"use strict";e.r(t);var a=e(3),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"vue-scoped-穿透-vue-修改内部组件样式问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-scoped-穿透-vue-修改内部组件样式问题"}},[s._v("#")]),s._v(" vue scoped 穿透_vue 修改内部组件样式问题")]),s._v(" "),e("h2",{attrs:{id:"scoped实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scoped实现原理"}},[s._v("#")]),s._v(" scoped实现原理")]),s._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/single-file-components.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("单文件组件"),e("OutboundLink")],1),s._v("让你可以在同一个文件里完全控制 CSS，将其作为组件代码的一部分。")])]),s._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[s._v("<style scoped>\n  "),e("span",{pre:!0,attrs:{class:"token atrule"}},[e("span",{pre:!0,attrs:{class:"token rule"}},[s._v("@media")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token property"}},[s._v("min-width")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 250px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".list-container:hover")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v("background")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" orange"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n</style>\n")])])]),e("p",[s._v("这个可选"),e("code",[s._v("scoped")]),s._v("属性会自动添加一个唯一的属性 (比如"),e("code",[s._v("data-v-21e5b78")]),s._v(") 为组件内 CSS 指定作用域，编译的时候 "),e("code",[s._v(".list-container:hover")]),s._v(" 会被编译成类似 "),e("code",[s._v(".list-container[data-v-21e5b78]:hover")]),s._v("。")]),s._v(" "),e("h2",{attrs:{id:"为什么需要穿透scoped"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要穿透scoped"}},[s._v("#")]),s._v(" 为什么需要穿透scoped?")]),s._v(" "),e("p",[s._v("在很多时候需要引用第三方组件，需要在组件中局部修改第三方组件的样式，而又不想去除scope属性造成组件之间的样式污染；此时只能通过特殊的方式，穿透scoped。")]),s._v(" "),e("ol",[e("li",[s._v("通过 >>> 可以使得在使用scoped属性的情况下，穿透scoped，修改其他组件的值。")])]),s._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[s._v("<style scoped>\n    外层 >>> 第三方组件")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        样式\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n</style>\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("定义一个含有scoped属性的style标签之外，再定义一个不含有scoped属性的style标签，即在一个vue组件中定义一个全局的style标签，一个含有作用域的style标签：")])]),s._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[s._v("<style>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* global styles */")]),s._v("\n</style>\n\n<style scoped>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* local styles */")]),s._v("\n</style>\n")])])]),e("p",[s._v("此时，你只需要将修改第三方样式的css写在第一个style中即可。")]),s._v(" "),e("Vssue")],1)}),[],!1,null,null,null);t.default=n.exports}}]);